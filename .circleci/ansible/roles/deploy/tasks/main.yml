# ---

# - name: Copy backend dist files to remote server
#   copy:
#     src: /root/project/backend
#     dest: /home/ubuntu

# - name: Install Node modules
#   shell: |
#     cd /home/ubuntu/backend
#     ls -la
#     printenv
#     npm install
# - name: building node services
#   shell: |
#     cd /home/ubuntu/backend
#     npm run build
#     npm run prestart:prod
# #- name: Build Node App
# #  shell: |
# #    cd /home/ubuntu/backend
# #    npm run build

# - name: "run migrations again"
#   shell: |
#     cd /home/ubuntu/backend
#     npm run migrations
    
# - name: Executing node
#   become: true
#   shell: |
#     cd /home/ubuntu/backend 
#     pm2 start npm --name backend -- start
#     pm2 ls



---
  - name: "show remote environment"
    shell: env
  - name: "copy backend binaries"
    become: yes
    synchronize:
      src: ../../backend/dist
      dest: /home/ubuntu/uda_app
      recursive: true
  - name: "copy node_modules"
    become: yes
    synchronize:
      src: ../../backend/node_modules
      dest: /home/ubuntu/uda_app
      recursive: true
  - name: "delete anything that might already be running"
    become: true
    command: pm2 delete all
    ignore_errors: true
  - name: "start server"
    become: true
    command: pm2 start -f ./main.js
    args:
      chdir: /home/ubuntu/uda_app/dist
    environment:
     ENVIRONMENT: production
     TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION') }}"
     TYPEORM_MIGRATIONS_DIR: "./migrations"
     TYPEORM_MIGRATIONS: "./migrations/*.js"
     TYPEORM_ENTITIES: "./modules/domain/**/*.entity.js"
     TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST') }}"
     TYPEORM_PORT: "{{ lookup('env', 'TYPEORM_PORT') }}"
     TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME') }}"
     TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD') }}"
     TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE') }}"
